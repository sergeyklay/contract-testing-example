---
openapi: 3.0.3

info:
  version: '1.0'
  title: Products API Definition
  description: Example API to test Specmatic features.
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  contact:
    name: Bug Tracker
    url: https://github.com/sergeyklay/specmatic-testing-example/issues
    email: egrep@protonmail.ch

servers:
  - description: Localhost
    url: http://127.0.0.1:5000

tags:
  - name: products
    description: Products related API.

components:
  schemas:
    Product:
      title: Product
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          example: 42
        self_url:
          type: string
          example: https://example.com/v1/products/1
        title:
          type: string
          example: iPhone 9
          minLength: 1
          maxLength: 64
        description:
          type: string
          example: An Apple mobile which is nothing like apple
          minLength: 0
          maxLength: 512
        price:
          type: number
          minimum: 0
          example: 549
        discount:
          type: number
          minimum: 0.0
          example: 12.96
        rating:
          type: number
          minimum: 0.0
          maximum: 5.0
          example: 4.69
        stock:
          type: integer
          format: int32
          minimum: 0
          example: 856
        brand:
          type: string
          example: Apple, Inc.
          minLength: 1
          maxLength: 64
        category:
          $ref: '#/components/schemas/ProductCategory'
      required:
        - id
        - self_url
        - title
        - description
        - price
        - discount
        - rating
        - stock
        - brand
        - category
    ProductCategory:
      title: Product Category
      type: string
      example: smartphones
    Links:
      title: Pagination Links
      description: |-
        Used to provide pagination information, allowing clients to navigate
        through large sets of data by following links to subsequent pages.
      type: object
      required:
        - self
        - first
        - last
        - next
        - prev
      properties:
        self:
          type: string
          example: https://example.com/v1/products?page=1&per_page=10
          description: Provides a hyperlink to the current page of a paginated set of data.
        first:
          type: string
          example: https://example.com/v1/products?page=1&per_page=10
          description: Provides a hyperlink to the first page of a paginated set of data.
        last:
          type: string
          example: https://example.com/v1/products?page=30&per_page=10
          description: Provides a hyperlink to the last page of a paginated set of data.
        next:
          type: string
          example: https://example.com/v1/products?page=3&per_page=10
          description: Provides a hyperlink to the next page of a paginated set of data.
          nullable: true
        prev:
          type: string
          example: https://example.com/v1/products?page=1&per_page=10
          description: Provides a hyperlink to the previous page of a paginated set of data.
          nullable: true
    Pagination:
      title: API pagination
      description:  |-
        Used by APIs to limit the number of results returned in a single
        response and enable clients to retrieve additional results in subsequent
        requests.
      type: object
      required:
        - page
        - pages
        - per_page
        - total
      properties:
        page:
          description: |-
            Indicates the current page number of the data that is being returned in the response.
            This is useful because it allows the client to keep track of which page they are currently
            viewing and to navigate to other pages of the data if necessary.
          type: integer
          format: int32
          minimum: 1
          example: 7
        pages:
          description: |-
            Used to provide information about the number of pages in a paginated set of data.
            In this case, it would indicate the total number of pages in the dataset, which can be
            useful for the client to understand the overall structure of the dataset and to navigate
            through the data efficiently.
          type: integer
          format: int32
          minimum: 1
          example: 30
        per_page:
          description: |-
            Indicates the number of items or entries that are included in a single page of the
            paginated response. For example, if the value of pagination.per_page is 10, then each
            page of the response will include 10 items or entries.
          type: integer
          format: int32
          minimum: 1
          example: 30
        total:
          description: |-
            Indicates the total number of items or entries in the dataset, regardless of pagination.
            This parameter is useful because it allows the client to better understand the overall
            size of the dataset and to calculate the number of pages in the paginated response.
          type: integer
          format: int32
          minimum: 0
          example: 300
    NotFoundResponse:
      title: Not Found Response
      type: object
      required:
        - status
        - title
        - description
      properties:
        status:
          type: integer
          format: int32
          example: 404
        title:
          type: string
          example: Not Found
        description:
          type: string
          example: Specified product not found
  parameters:
    ProductIdParameter:
      in: path
      name: id
      description: Product ID param
      schema:
        type: integer
        format: int32
        minimum: 1
      required: true
      examples:
        success:
          summary: An ID of an existing product
          value: 42
        not-found:
          summary: An ID of an not existing product
          value: 10000000

paths:
  /v1/products:
    get:
      summary: Get list of products
      description: Returns a list of all products.
      operationId: products.index
      tags: [products]
      parameters:
        - in: query
          name: expanded
          description: Return collection of links to products (0) or expanded response (1).
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 1
          examples:
            expanded:
              value: 1
              summary: A response with full products detail
            collapsed:
              value: 0
              summary: A response with products links only
        - in: query
          name: category
          description: Filter by product category.
          required: false
          schema:
            type: string
          examples:
            laptops:
              value: laptops
              summary: Products from the "laptops" category
            smartphones:
              value: smartphones
              summary: Products from the "smartphones" category
        - in: query
          name: q
          description: Search term.
          required: false
          schema:
            type: string
          examples:
            term:
              value: Samsung
              summary: A sample search keyword
      responses:
        '200':
          description: List of products
          headers:
            ETag:
              description: The ETag HTTP response header is an identifier for a specific version of a resource.
              schema:
                type: string
                minLength: 34
                maxLength: 34
              example: '"c1983e057880c5d40817708584401e4d"'
          content:
            application/json:
              schema:
                type: object
                required:
                  - links
                  - pagination
                  - products
                properties:
                  links:
                    $ref: '#/components/schemas/Links'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  products:
                    oneOf:
                      - type: array
                        items:
                          $ref: '#/components/schemas/Product'
                      - type: array
                        items:
                          type: string
              examples:
                expanded:
                  value:
                    links:
                      self: https://example.com/v1/products?page=1&per_page=10
                      first: https://example.com/v1/products?page=1&per_page=10
                      last: https://example.com/v1/products?page=30&per_page=10
                      next: https://example.com/v1/products?page=3&per_page=10
                      prev: https://example.com/v1/products?page=1&per_page=10
                    pagination:
                      page: 2
                      pages: 30
                      per_page: 10
                      total: 300
                    products:
                      - id: 1
                        self_url: https://example.com/v1/products/1
                        title: iPhone 9
                        description: An Apple mobile which is nothing like apple
                        price: 549
                        discount: 12.96
                        rating: 4.69
                        stock: 94
                        brand: Apple
                        category: smartphones
                      - id: 6
                        self_url: https://example.com/v1/products/6
                        title: Samsung Galaxy Book
                        description: Samsung Galaxy Book S (2020) Laptop With Intel Lakefield Chip, 8GB of RAM Launched
                        price: 1499
                        discount: 4.15
                        rating: 4.25
                        stock: 50
                        brand: Samsung
                        category: laptops
                  summary: A response with full products detail
                collapsed:
                  value:
                    links:
                      self: https://example.com/v1/products?page=1&per_page=10
                      first: https://example.com/v1/products?page=1&per_page=10
                      last: https://example.com/v1/products?page=30&per_page=10
                      next: https://example.com/v1/products?page=3&per_page=10
                      prev: https://example.com/v1/products?page=1&per_page=10
                    pagination:
                      page: 2
                      pages: 30
                      per_page: 10
                      total: 300
                    products:
                      - https://example.com/v1/products/1
                      - https://example.com/v1/products/2
                      - https://example.com/v1/products/3
                      - https://example.com/v1/products/4
                      - https://example.com/v1/products/5
                      - https://example.com/v1/products/6
                      - https://example.com/v1/products/8
                      - https://example.com/v1/products/9
                      - https://example.com/v1/products/10
                  summary: A response with products links only
  '/v1/products/{id}':
    get:
      summary: Get single product
      description: Returns a single product.
      operationId: products.get
      tags: [products]
      parameters:
        - $ref: '#/components/parameters/ProductIdParameter'
      responses:
        '200':
          description: A product
          headers:
            ETag:
              description: The ETag HTTP response header is an identifier for a specific version of a resource.
              schema:
                type: string
                minLength: 34
                maxLength: 34
              example: '"c1983e057880c5d40817708584401e4d"'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              examples:
                iPhone:
                  value:
                    id: 1
                    self_url: https://example.com/v1/products/1
                    title: iPhone 9
                    description: An Apple mobile which is nothing like apple
                    price: 549
                    discount: 12.96
                    rating: 4.69
                    stock: 94
                    brand: Apple
                    category: smartphones
                Samsung:
                  value:
                    id: 6
                    self_url: https://example.com/v1/products/6
                    title: Samsung Galaxy Book
                    description: Samsung Galaxy Book S (2020) Laptop With Intel Lakefield Chip, 8GB of RAM Launched
                    price: 1499
                    discount: 4.15
                    rating: 4.25
                    stock: 50
                    brand: Samsung
                    category: laptops
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
    delete:
      summary: Delete product
      description: Deletes a specific product and returns status code 204 if successful, otherwise - 404.
      operationId: products.delete
      tags: [ products ]
      parameters:
        - $ref: '#/components/parameters/ProductIdParameter'
      responses:
        '204':
          description: Successful operation
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
