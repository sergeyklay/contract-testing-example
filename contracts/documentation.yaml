---
openapi: 3.0.3

info:
  version: '1.0'
  title: Products API
  description: Example API to test Specmatic features.

servers:
  - description: Localhost
    url: http://127.0.0.1:5000

tags:
  - name: products
    description: Products related API.

components:
  parameters:
    AcceptHeader:
      in: header
      name: Accept
      description: Accept Header
      schema:
        type: string
        enum: [application/json, '*/*']
      example: application/json
    IdParam:
      in: path
      name: id
      description: Entity ID param
      schema:
        type: integer
        format: int32
        minimum: 1
      required: true
      example: 42
    CategoryQuery:
      in: query
      name: category
      description: Filter by product category.
      required: false
      schema:
        type: string
      examples:
        single:
          value: laptops
          summary: A sample category to filter products.
    KeywordQuery:
      in: query
      name: q
      description: Search term.
      required: false
      schema:
        type: string
      examples:
        term:
          value: Samsung
          summary: A sample search keyword.

  schemas:
    Product:
      title: Product
      allOf:
        - $ref: '#/components/schemas/ProductId'
        - $ref: '#/components/schemas/ProductDetails'
    ProductId:
      title: Product ID
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          example: 42
      required: [id]
    ProductDetails:
      title: Product Details
      type: object
      properties:
        title:
          type: string
          example: iPhone 9
        description:
          type: string
          example: An apple mobile which is nothing like apple
        price:
          type: number
          minimum: 0
          example: 549
        discount:
          type: number
          minimum: 0.0
          example: 12.96
        rating:
          type: number
          minimum: 0.0
          maximum: 5.0
          example: 4.69
        stock:
          type: integer
          format: int32
          minimum: 0
          example: 856
        brand:
          type: string
          example: Apple, Inc.
        category:
          $ref: '#/components/schemas/ProductCategory'
      required:
        - title
        - description
        - price
        - discount
        - rating
        - stock
        - brand
        - category
    ProductCategory:
      title: Product Category
      type: string
      enum:
        - smartphones
        - laptops
      example: smartphones

paths:
  /v1/products:
    get:
      summary: List of all products.
      operationId: products.index
      tags: [products]
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/CategoryQuery'
        - $ref: '#/components/parameters/KeywordQuery'
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                products:
                  value:
                    - id: 1
                      title: iPhone 9
                      description: An apple mobile which is nothing like apple
                      price: 549
                      discount: 12.96
                      rating: 4.69
                      stock: 94
                      brand: Apple
                      category: smartphones
                    - id: 6
                      title: Samsung Galaxy Book
                      description: Samsung Galaxy Book S (2020) Laptop With Intel Lakefield Chip, 8GB of RAM Launched
                      price: 1499
                      discount: 4.15
                      rating: 4.25
                      stock: 50
                      brand: Samsung
                      category: laptops
                  summary: A sample list of products.

  '/v1/products/{id}':
    get:
      summary: Get product.
      operationId: products.get
      tags: [products]
      parameters:
        - $ref: '#/components/parameters/AcceptHeader'
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Get product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  description:
                    type: string
                    example: Invalid product ID data type
                  name:
                    type: string
                    example: Bad Request
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 404
                  description:
                    type: string
                    example: Product not found
                  name:
                    type: string
                    example: Not Found
