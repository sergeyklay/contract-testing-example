name: Check Contracts

on: [push]

jobs:
  check-contracts:

    runs-on: ${{ matrix.os }}
    name: Test Contracts

    strategy:
      # When set to true, GitHub cancels
      # all in-progress jobs if any matrix job fails.
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0

      - name: Detect current branch
        id: current-branch
        run: |
          if [ "${{ github.head_ref }}" != "" ]; then
            ref="${{ github.head_ref }}"
          else
            ref="${{ github.ref }}"
          fi
          
          prefix="refs/heads/"
          branch=${ref#"$prefix"}
          
          echo "ref=$branch" >> $GITHUB_OUTPUT
        shell: bash

      - name: Setup tracking for main branch
        if: steps.current-branch.outputs.ref != 'main'
        run: git branch --track main origin/main

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup cache on Linux
        uses: actions/cache@v3
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup cache on macOS
        uses: actions/cache@v3
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup cache on Windows
        uses: actions/cache@v3
        if: matrix.os == 'windows-latest'
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run API server
        run: flask --app runner:app run &
        shell: bash

      - name: Setup specmatic
        uses: airslate-oss/setup-specmatic@v1
        with:
          specmatic-version: 0.59.0

      - name: Test specification
        run: specmatic test --testBaseURL=http://127.0.0.1:5000
    
      - name: Run backward compatibility check on changed files
        if: matrix.os != 'windows-latest' && steps.current-branch.outputs.ref != 'main'
        run: specmatic compatible git commits contracts/documentation.yaml main HEAD
