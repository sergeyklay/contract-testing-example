name: Check Contracts

on:
  push:
    branches:
      - main
      - 'feature/**'
      - 'release/**'
      - 'fix/**'

  pull_request:
    branches:
      - main

  schedule:
    - cron: '0 12 * * *'
      #      | | | | |
      #      | | | | |____ day of the week (0 - 6 or SUN-SAT)
      #      | | | |____ month (1 - 12 or JAN-DEC)
      #      | | |____ day of the month (1 - 31)
      #      | |____ hour (0 - 23)
      #      |____ minute (0 - 59)

env:
  PYTHONUNBUFFERED: '1'

jobs:
  check-contracts:

    runs-on: ${{ matrix.os }}
    name: Specmatic ${{ matrix.specmatic-version }} on ${{ matrix.os }}

    strategy:
      # When set to true, GitHub cancels
      # all in-progress jobs if any matrix job fails.
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        specmatic-version:
          # Version 0.59.0 is disabled due to lack of these patches:
          # - https://github.com/znsio/specmatic/pull/586
          # - https://github.com/znsio/specmatic/pull/594
          #
          # - 0.59.0

          - 0.60.0
          - 0.61.0

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0

      - name: Detect current branch
        id: current-branch
        run: |
          if [ "${{ github.head_ref }}" != "" ]; then
            ref="${{ github.head_ref }}"
          else
            ref="${{ github.ref }}"
          fi
          
          prefix="refs/heads/"
          branch=${ref#"$prefix"}
          
          echo "ref=$branch" >> $GITHUB_OUTPUT
        shell: bash

      - name: Setup tracking for main branch
        if: steps.current-branch.outputs.ref != 'main'
        run: git branch --track main origin/main

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup cache on Linux
        uses: actions/cache@v3
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup cache on macOS
        uses: actions/cache@v3
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup cache on Windows
        uses: actions/cache@v3
        if: matrix.os == 'windows-latest'
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install virtualenv
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          python -m pip install virtualenv

      - name: Set up virtualenv
        run: make init
        shell: bash

      - name: Install dependencies
        run: make install
        shell: bash

      - name: Run unit tests with coverage
        run: make test

      - name: Combine coverage reports
        run: make ccov

      - uses: codecov/codecov-action@v3
        if: success()
        with:
          fail_ci_if_error: true
          verbose: true

      - name: Run database migrations
        run: make migrate

      - name: Add seed data to the database
        run: make seed

      - name: Run API server
        run: make serve &
        shell: bash

      - name: Setup specmatic
        uses: airslate-oss/setup-specmatic@v1
        with:
          specmatic-version: ${{ matrix.specmatic-version }}

      - name: Test specification
        run: specmatic test --testBaseURL=http://127.0.0.1:5000
    
      # - name: Run backward compatibility check on changed files
      #   if: matrix.os != 'windows-latest' && steps.current-branch.outputs.ref != 'main'
      #   run: specmatic compatible git commits contracts/documentation.yaml main HEAD
