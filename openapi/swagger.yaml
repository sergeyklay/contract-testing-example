---
openapi: 3.0.3

info:
  version: '2.0'
  title: Products API Definition
  description: Provider-side demo using consumer-driven contract testing.
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  contact:
    name: Bug Tracker
    url: https://github.com/sergeyklay/provider-pact-example/issues
    email: egrep@protonmail.ch

servers:
  - description: Localhost
    url: http://127.0.0.1:5000

tags:
  - name: products
    description: Products related API.

components:
  schemas:
    Product:
      title: Product
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          example: 42
        title:
          type: string
          example: iPhone 9
          minLength: 1
          maxLength: 64
        description:
          type: string
          example: An Apple mobile which is nothing like apple
          maxLength: 512
        price:
          type: number
          minimum: 0
          example: 549
        discount:
          type: number
          minimum: 0.0
          example: 12.96
        rating:
          type: number
          minimum: 0.0
          maximum: 5.0
          example: 4.69
        stock:
          type: integer
          format: int32
          minimum: 0
          example: 856
        brand_id:
          type: integer
          format: int32
          minimum: 1
          example: 7
        category_id:
          type: integer
          format: int32
          minimum: 1
          example: 13
      required:
        - id
        - title
        - price
        - discount
        - rating
        - stock
        - brand_id
        - category_id
    Pagination:
      title: API pagination
      description: |-
        Used by APIs to limit the number of results returned in a single
        response and enable clients to retrieve additional results in subsequent
        requests.
      type: object
      required:
        - page
        - pages
        - per_page
        - total
      properties:
        page:
          description: |-
            Indicates the current page number of the data that is being returned in the response.
            This is useful because it allows the client to keep track of which page they are currently
            viewing and to navigate to other pages of the data if necessary.
          type: integer
          format: int32
          minimum: 1
          example: 7
        pages:
          description: |-
            Used to provide information about the number of pages in a paginated set of data.
            In this case, it would indicate the total number of pages in the dataset, which can be
            useful for the client to understand the overall structure of the dataset and to navigate
            through the data efficiently.
          type: integer
          format: int32
          minimum: 1
          example: 30
        per_page:
          description: |-
            Indicates the number of items or entries that are included in a single page of the
            paginated response. For example, if the value of pagination.per_page is 10, then each
            page of the response will include 10 items or entries.
          type: integer
          format: int32
          minimum: 1
          example: 30
        total:
          description: |-
            Indicates the total number of items or entries in the dataset, regardless of pagination.
            This parameter is useful because it allows the client to better understand the overall
            size of the dataset and to calculate the number of pages in the paginated response.
          type: integer
          format: int32
          minimum: 0
          example: 300
    NotFoundResponse:
      title: Not Found Response
      type: object
      required:
        - code
        - status
      properties:
        code:
          type: integer
          format: int32
          example: 404
        status:
          type: string
          example: Not Found
    PreconditionRequired:
      title: Precondition Required Response
      type: object
      required:
        - code
        - status
      properties:
        code:
          type: integer
          format: int32
          example: 428
        status:
          type: string
          example: Precondition Required
  parameters:
    ProductIdParameter:
      in: path
      name: id
      description: Product ID param
      schema:
        type: integer
        format: int32
        minimum: 1
      required: true
      examples:
        success:
          summary: An ID of an existing product
          value: 42
        not-found:
          summary: An ID of an not existing product
          value: 10000000

paths:
  /v1/products:
    get:
      summary: Get list of products
      description: Returns a list of all products.
      operationId: products.index
      tags: [products]
      parameters:
        - in: query
          name: cid
          description: Filter by product category.
          required: false
          schema:
            type: string
          examples:
            category_12:
              value: 12
              summary: Products from Category ID 12
            category_13:
              value: 13
              summary: Products from Category ID 13
        - in: query
          name: bid
          description: Filter by product brand.
          required: false
          schema:
            type: string
          examples:
            brand_7:
              value: 7
              summary: Products for Brand ID 7
            brand_9:
              value: 9
              summary: Products for Brand ID 9
        - in: query
          name: q
          description: Search term.
          required: false
          schema:
            type: string
          examples:
            term:
              value: Samsung
              summary: A sample search keyword
      responses:
        '200':
          description: List of products
          headers:
            ETag:
              description: The ETag HTTP response header is an identifier for a specific version of a resource.
              schema:
                type: string
                minLength: 2
                maxLength: 44
              example: '"92cfceb39d57d914ed8b14d0e37643de0797ae56"'
          content:
            # Headers:
            # X-Pagination
            # {"total": 1011, "total_pages": 102, "first_page": 1, "last_page": 102, "page": 1, "next_page": 2}
            #
            # ETag
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                products_list:
                  value:
                    - id: 1
                      title: iPhone 9
                      description: An Apple mobile which is nothing like apple
                      price: 549
                      discount: 12.96
                      rating: 4.69
                      stock: 94
                      brand_id: 7
                      category_id: 13
                    - id: 6
                      title: Samsung Galaxy Book
                      description: Samsung Galaxy Book S (2020) Laptop With Intel Lakefield Chip, 8GB of RAM Launched
                      price: 1499
                      discount: 4.15
                      rating: 4.25
                      stock: 50
                      brand_id: 8
                      category_id: 13
                  summary: A response with full products detail

# POST:
#  {
#    "code": 422,
#    "errors": {
#      "json": {
#        "brand": [
#          "Missing data for required field."
#        ],
#        "category": [
#          "Missing data for required field."
#        ]
#      }
#    },
#    "status": "Unprocessable Entity"
#  }
  '/v1/products/{id}':
    get:
      summary: Get single product
      description: Returns a single product.
      operationId: products.get
      tags: [products]
      parameters:
        - $ref: '#/components/parameters/ProductIdParameter'
      responses:
        '200':
          description: A product
          headers:
            ETag:
              description: The ETag HTTP response header is an identifier for a specific version of a resource.
              schema:
                type: string
                minLength: 2
                maxLength: 44
              example: '"92cfceb39d57d914ed8b14d0e37643de0797ae56"'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              examples:
                iPhone:
                  value:
                    id: 1
                    title: iPhone 9
                    description: An Apple mobile which is nothing like apple
                    price: 549
                    discount: 12.96
                    rating: 4.69
                    stock: 94
                    brand_id: 7
                    category_id: 11
                Samsung:
                  value:
                    id: 6
                    title: Samsung Galaxy Book
                    description: Samsung Galaxy Book S (2020) Laptop With Intel Lakefield Chip, 8GB of RAM Launched
                    price: 1499
                    discount: 4.15
                    rating: 4.25
                    stock: 50
                    brand_id: 9
                    category_id: 12
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'

    # This request is required to be conditional
    delete:
      summary: Delete product
      description: Deletes a specific product and returns status code 204 if successful, otherwise - 404.
      operationId: products.delete
      tags: [ products ]
      parameters:
        - $ref: '#/components/parameters/ProductIdParameter'
        - in: header
          name: ETag
          description: The ETag HTTP request header is an identifier for a specific version of a resource.
          required: true
          schema:
            type: string
            minLength: 2
            maxLength: 44
          examples:
            simple:
              value: '"92cfceb39d57d914ed8b14d0e37643de0797ae56"'
              summary: Example of typical ETag header
      responses:
        '204':
          description: Successful operation
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '428':
          description: Precondition Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionRequired'
